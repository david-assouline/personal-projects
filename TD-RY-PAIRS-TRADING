import numpy as np

def initialize(context):
    schedule_function(check_pairs,date_rules.every_day(),time_rules.market_open(minutes=1))
    context.ry = sid(45971)
    context.td = sid(28051)
    
    context.long_spread = False
    context.short_spread = False
    
def check_pairs(context,data):
    
    ry = context.ry
    td = context.td
    
    prices = data.history([ry,td],"price",30,"1d")
    
    short_prices = prices.iloc[-1:]
    
    mavg_30 = np.mean(prices[ry] - prices[td])
    std_30 = np.std(prices[ry] - prices[td])
    
    mavg_1 = np.mean(short_prices[ry] - short_prices[td])
    
    if std_30 > 0:
        zscore = (mavg_1 - mavg_30)/std_30
        
        if zscore >= 1.5 and not context.short_spread:
            order_target_percent(ry, 0.5)
            order_target_percent(td, -0.5)
            context.short_spread = True
            context.long_spread = False
            
        elif zscore < 1.5 and not context.long_spread:
            order_target_percent(ry, -0.5)
            order_target_percent(td, 0.5)
            context.short_spread = False
            context.long_spread = True
            
        elif abs(zscore) < 0.1:
            order_target_percent(ry, 0)
            order_target_percent(td, 0)
            context.short_spread = False
            context.long_spread = False
            
        record(z_score = zscore)
    
